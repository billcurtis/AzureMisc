let Connections = WVDConnections
    | where TimeGenerated >= ago(24h)
    | where State == "Completed" or State == "Connected"
    | where UserName == "user@contoso.com"
    | summarize LatestTimeGenerated = arg_max(TimeGenerated, *) by CorrelationId, State
    | join kind=leftouter ( 
        WVDErrors
        | where CodeSymbolic != "LogonTimeout"
        | where CodeSymbolic != "ClientNetworkUnavailable"
        | where CodeSymbolic != "TransportClosedUnexpectedly"
        | where CodeSymbolic != "ConnectionFailedClientDisconnect"
        | where CodeSymbolic != "ConnectionFailedReverseUngracefulClose"
        | where CodeSymbolic != "ShortpathTransportTurnServerShutdown"
        | where CodeSymbolic != "GraphicsCapsNotReceived"
        | where CodeSymbolic != "SideTransportTurnServerShutdown"
        | where CodeSymbolic != "StackCrash"
        | where CodeSymbolic != "UnexpectedNetworkDisconnect"
        | where CodeSymbolic != "ConnectionFailedServerDisconnect"
        | where CodeSymbolic != "SideTransportReadThreadHang"
        | project CorrelationId, CodeSymbolic, ErrorTimeGenerated = TimeGenerated
        )
        on CorrelationId
    | join kind=leftouter ( 
        WVDConnectionNetworkData
        | project
            CorrelationId,
            EstAvailableBandwidthKBps,
            EstRoundTripTimeInMs,
            NetDataTimeGenerated = TimeGenerated
        )
        on CorrelationId;
Connections
| where isnotempty(CorrelationId)
| summarize 
    StartTime = min(LatestTimeGenerated), 
    EndTime = max(LatestTimeGenerated)
    by CorrelationId, GatewayRegion, ClientOS, ClientSideIPAddress, SessionHostName, UserName, TransportType, CodeSymbolic,EstAvailableBandwidthKBps, EstRoundTripTimeInMs
| extend TimeDelta = EndTime - StartTime
| extend LastLogin = StartTime
| extend LastLogoff = EndTime
| project
    CorrelationId,
    UserName,
    StartTime,
    EndTime,
    TransportType,
    TimeDelta,
    CodeSymbolic,
    GatewayRegion,
    EstAvailableBandwidthKBps,
    EstRoundTripTimeInMs,
    SessionHostName,
    ClientOS,
    ClientSideIPAddress
    

